#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_ST7789.h>
#include <RTClib.h>
#include <OneWire.h>
#include <DallasTemperature.h>

#define TFT_MOSI 6
#define TFT_SCLK 4
#define TFT_RST  2
#define TFT_DC   0
#define TFT_CS  -1

#define DS3231_SDA 8
#define DS3231_SCL 10
#define ONE_WIRE_BUS 7

Adafruit_ST7789 tft = Adafruit_ST7789(&SPI, TFT_CS, TFT_DC, TFT_RST);
RTC_DS3231 rtc;
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);

int lastMinute = -1;
float lastTemp = -999;
int lastDay = -1;

// ====== Cấu hình size chữ từng dòng ======
int tempSize = 3;
int timeSize = 6;
int dateSize = 3;

void drawCenteredText(int y, int size, uint16_t color, String text) {
  tft.setTextSize(size);
  tft.setTextColor(color);
  tft.setTextWrap(false);
  int16_t x1, y1;
  uint16_t w, h;
  tft.getTextBounds(text, 0, 0, &x1, &y1, &w, &h);
  tft.fillRect(0, y, 240, h, ST77XX_BLACK);
  tft.setCursor((240 - w) / 2, y);
  tft.print(text);
}

void setup() {
  Serial.begin(115200);
  delay(500);

  SPI.begin(TFT_SCLK, -1, TFT_MOSI, TFT_CS);
  tft.init(240, 240, SPI_MODE3);
  tft.setRotation(1);
  tft.setSPISpeed(8000000);
  tft.fillScreen(ST77XX_BLACK);

  Wire.begin(DS3231_SDA, DS3231_SCL);
  rtc.begin();
  if (rtc.lostPower()) {
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
  }

  sensors.begin();
}

void loop() {
  DateTime now = rtc.now();
  sensors.requestTemperatures();
  float tempC = sensors.getTempCByIndex(0);

  int lineHeight = 240 / 3;
  int tempY = lineHeight / 2 - 12;
  int timeY = lineHeight + lineHeight / 2 - 12;
  int dateY = 2 * lineHeight + lineHeight / 2 - 12;

  // ====== NHIỆT ĐỘ ======
  if (abs(tempC - lastTemp) > 0.1) {
    lastTemp = tempC;
    String tempStr = (tempC == -127.0) ? "Err" : String(tempC, 1) + " C";
    uint16_t tempColor = ST77XX_WHITE;
    if (tempC > 31.0) tempColor = ST77XX_RED;
    else if (tempC < 23.0) tempColor = ST77XX_BLUE;
    drawCenteredText(tempY, tempSize, tempColor, tempStr);
  }

  // ====== GIỜ & PHÚT ======
  if (now.minute() != lastMinute) {
    lastMinute = now.minute();
    char timeStr[16];
    sprintf(timeStr, "%02d:%02d", now.hour(), now.minute());
    drawCenteredText(timeY, timeSize, ST77XX_GREEN, String(timeStr));
  }

  // ====== NGÀY / THÁNG / NĂM ======
  if (now.day() != lastDay) {
    lastDay = now.day();
    char dateStr[20];
    sprintf(dateStr, "%02d/%02d/%04d", now.day(), now.month(), now.year());
    drawCenteredText(dateY, dateSize, ST77XX_CYAN, String(dateStr));
  }

  delay(500);
}